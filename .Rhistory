to_long,to_lat) %>%
summarize(trips = n_distinct(trip_id))
#Map
pal <- colorNumeric("viridis",domain = trips_to$trips)
tooltip <- paste("<strong>Station:</strong>",
trips_to$to_station_name,"<br>",
"<strong>Trips Terminating:</strong>",
comma(trips_to$trips))
map_to <- leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addCircles(data = trips_to,lng = ~to_long,lat = ~to_lat,
stroke = F,fill = T,fillColor = ~pal(trips),
fillOpacity=0.7,radius = ~(trips/100),
popup = tooltip) %>%
addLegend(position = "bottomright",pal = pal,
values = trips_to$trips,
title = "Trips<br>Terminating")
# Chunk 5
#Map together
sync(map_from,map_to)
# Chunk 6
#=============
#Net
#=============
#Dataframe, 25 largest disparities
trips_net <- trips_to %>%
ungroup() %>%
select(to_station_id,"trips_end" = trips) %>%
left_join(trips_from,.,
by = c("from_station_id" = "to_station_id")) %>%
mutate(trips = trips-trips_end) %>%
select(-trips_end) %>%
arrange(desc(abs(trips))) %>%
head(25)
#Map
pal <- colorNumeric("RdYlGn",domain = trips_net$trips)
tooltip <- paste("<strong>Station:</strong>",
trips_net$from_station_name,"<br>",
"<strong>Trips<br>(Originating -<br>Terminating):</strong>",
comma(trips_net$trips))
map_net <- leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addCircles(data = trips_net,lng = ~from_long,lat = ~from_lat,
stroke = T,weight = 1,color = "#0F0F0F",
radius = 100,fill = T,fillColor = ~pal(trips),
fillOpacity = 0.7,popup = tooltip) %>%
addLegend(position = "bottomright",pal = pal,
values = trips_net$trips,
title = "Trips<br>(Originating -<br>Terminating)")
# Chunk 7
#Map
map_net
# Chunk 8
#=============
#Daily
#=============
#Dataframe
daily <- trips %>%
select(start_time,trip_id) %>%
mutate(start_time = date(start_time)) %>%
group_by(start_time) %>%
summarize(trips = n_distinct(trip_id))
#Plot
plot_daily <- ggplot(daily,aes(start_time,trips)) +
geom_line(size = 1,color = "darkgrey",alpha = .7) +
geom_smooth() +
scale_y_comma(limits = c(0, NA)) +
labs(title = "Daily Trips",
x = "Date",y = "Trips",
caption = "Data: Divvy Bikes") +
theme_ipsum(base_size = 12,grid = "XY")
# Chunk 9
plot_daily
# Chunk 10
#=============
#Weekday
#=============
#Dataframe
weekday <- trips %>%
select(start_time,trip_id) %>%
mutate(start_time = wday(date(start_time),label = T)) %>%
group_by(start_time) %>%
summarize(trips = n_distinct(trip_id)) %>%
mutate(trips_perc = trips/sum(trips))
#Plot
plot_weekday <- ggplot(weekday,aes(start_time,trips_perc)) +
geom_bar(stat = "identity",fill = "#75b8d1") +
scale_y_percent(limits = c(0, NA)) +
labs(title = "Trips by Day of Week",
x = "Day of Week",y = "Trips (%)",
caption = "Data: Divvy Bikes") +
theme_ipsum(base_size = 12,grid = "Y")
# Chunk 11
plot_weekday
# Chunk 12
#Dataframe for plotting
trips_time <- trips %>%
mutate(trip_min = round(trip_duration/60,0)) %>%
select(trip_min,trip_id) %>%
group_by(trip_min) %>%
summarize(trips = n_distinct(trip_id))
#Plot
plot_trips_time <- ggplot(trips_time,aes(trip_min,trips)) +
geom_bar(stat = "identity",fill = "#75b8d1") +
geom_vline(xintercept = 31,size = 1,color = "red") +
scale_x_continuous(limits = c(0, 60),
breaks = seq(0,60,10)) +
scale_y_comma(limits = c(0, NA)) +
labs(title = "Trip Duration",
subtitle = "Trips Under 1 Hour (97% of All Trips)",
x = "Trip Duration (Minutes)",y = "Trips",
caption = "Data: Divvy Bikes") +
theme_ipsum(base_size = 12,grid = "Y")
# Chunk 13
#Plot
plot_trips_time
# Chunk 14
#Dataframe for DT
trips_30 <- trips %>%
mutate(trip_30_flag = ifelse(round(trip_duration/60,0)<31,
"Yes","No")) %>%
group_by(user_type,trip_30_flag) %>%
summarize(Trips = n_distinct(trip_id)) %>%
ungroup() %>%
spread(trip_30_flag,Trips,fill = 0) %>%
mutate("No (%)" = percent(No/rowSums(.[-1])),
"Yes (%)" = percent(Yes/rowSums(.[-1]))) %>%
mutate(Total = No+Yes) %>%
select("User Type" = user_type,
Yes,`Yes (%)`,No,`No (%)`,Total)
# Chunk 15
#Table
DT::datatable(trips_30,
caption = "Trips - 30 Minutes or Less",
rownames = F,
options = list(dom = "t",
columnDefs = list(list(
className = "dt-center", targets = "_all"))))
# Chunk 16
#=============
#User Type
#=============
#Dataframe
user_type <- trips %>%
filter(user_type!="Dependent") %>%
select(user_type,trip_id) %>%
group_by(user_type) %>%
summarize(trips = n_distinct(trip_id)) %>%
mutate(trips_perc = trips/sum(trips))
#Plot
plot_user_type <- ggplot(user_type,aes(user_type,trips_perc)) +
geom_bar(stat = "identity",fill = "#75b8d1") +
scale_y_percent(limits = c(0, 1)) +
labs(title = "Trips by User Type",
x = "User Type",y = "Trips (%)",
caption = "Data: Divvy Bikes") +
theme_ipsum(base_size = 12,grid = "Y")
# Chunk 17
plot_user_type
# Chunk 18
#=============
#Age by Gender
#=============
#Dataframe
age_gender <- trips %>%
filter(user_type=="Subscriber",!is.na(gender),
birth_year>=1916) %>%
mutate(age = 2016 - birth_year) %>%
select(age,gender,trip_id) %>%
group_by(age,gender) %>%
summarize(trips = n_distinct(trip_id))
#Plot
plot_age_gender <- ggplot(age_gender,
aes(age,trips,group = gender,
fill = gender)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_comma(limits = c(0, NA)) +
labs(title = "Subscriber Trips by Age and Gender",
x = "Age",y = "Trips",
caption = "Data: Divvy Bikes") +
scale_fill_ipsum(name = "Gender",position = "bottom") +
theme_ipsum(base_size = 12,grid = "Y") +
theme(legend.position = "bottom")
# Chunk 19
plot_age_gender
View(daily)
daily %>% filter(trips==max(trips)) %>% select(start_time) %>% paste(month(.),',',mday(.))
daily %>% filter(trips==max(trips)) %>% select(start_time)
daily %>% filter(trips==max(trips)) %>% select(start_time) %>% paste(month(.$start_time),',',mday(.$start_time))
daily %>% filter(trips==max(trips)) %>% select(start_time) %>% paste(month(.$start_time, label = T,abbr = F),',',mday(.$start_time))
daily %>% filter(trips==max(trips)) %>% paste0(month(.$start_time, label = T,abbr = F),', ',mday(.$start_time))
daily %>% filter(trips==max(trips))
daily %>% filter(trips==max(trips)) %>% paste0(month(.[1,1], label = T,abbr = F),', ',mday(.$[1,1]))
daily %>% filter(trips==max(trips)) %>% paste0(month(.[1,1], label = T,abbr = F),', ',mday(.[1,1]))
daily %>% filter(trips==max(trips)) %>% paste0(month([1,1], label = T,abbr = F),', ',mday([1,1]))
daily %>% filter(trips==max(trips)) %>% paste0(month(start_time, label = T,abbr = F),', ',mday(start_time))
daily %>% filter(trips==max(trips)) %>% paste0(month(.$start_time, label = T,abbr = F),', ',mday(.$start_time))
daily %>% filter(trips==max(trips)) %>% pull(start_date)
daily %>% filter(trips==max(trips))
daily %>% filter(trips==max(trips)) %>% pull(.$start_date)
daily %>% filter(trips==max(trips)) %>% pull(start_date)
daily %>% filter(trips==max(trips)) %>% pull(1)
daily %>% filter(trips==max(trips)) %>% pull(1) %>%  paste0(month(., label = T,abbr = F),', ',mday(.))
daily %>% filter(trips==max(trips)) %>% pull(1) %>%  pull(paste0(month(., label = T,abbr = F),', ',mday(.)))
daily %>% filter(trips==max(trips)) %>% pull(1) %>% paste0(month(., label = T,abbr = F),', ',mday(.))
daily %>% filter(trips==max(trips)) %>% pull(1)
daily %>% filter(trips==max(trips)) %>%  mutate(clean = paste(month(.$start_time, label = T,abbr = F),mday(.$start_time)))
daily %>% filter(trips==max(trips)) %>%  mutate(clean = paste(month(.$start_time, label = T,abbr = F),mday(.$start_time))) %>% pull(3)
daily %>% filter(trips==max(trips)) %>%  mutate(clean = paste(mday(.$start_time),'th')) %>% pull(3)
daily %>% filter(trips==max(trips)) %>%  mutate(clean = paste0(mday(.$start_time),'th')) %>% pull(3)
# Chunk 1: setup
knitr::opts_chunk$set(message = F,warning = F,fig.width = 10,
fig.align = "center")
library(hrbrthemes);library(tidyverse)
library(stringr);library(lubridate)
library(zoo);library(scales)
library(viridis);library(leaflet)
library(mapview);library(DT)
user <- Sys.info()[["user"]]
new_wd <- sprintf("C:/Users/%s/Desktop/Divvy",user)
setwd(new_wd)
options(scipen = 1000, stringsAsFactors = FALSE)
#=============
#Import Divvy data
#=============
trips <- read_rds("./Data/trips.rds")
# Chunk 2
DT::datatable(head(trips,5),rownames= F,options = list(dom = "t",scrollX = T))
# Chunk 3
#=============
#From
#=============
#Dataframe
trips_from <- trips %>%
group_by(from_station_id,from_station_name,
from_long,from_lat) %>%
summarize(trips= n_distinct(trip_id))
#Map
pal <- colorNumeric("viridis",domain = trips_from$trips)
tooltip <- paste("<strong>Station:</strong>",
trips_from$from_station_name,"<br>",
"<strong>Trips Originating:</strong>",
comma(trips_from$trips))
map_from <- leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addCircles(data = trips_from,lng = ~from_long,lat = ~from_lat,
stroke = F,fill = T,fillColor = ~pal(trips),
fillOpacity = 0.7,radius = ~(trips/100),
popup = tooltip) %>%
addLegend(position = "bottomright",pal = pal,
values = trips_from$trips,
title = "Trips<br>Originating")
# Chunk 4
#=============
#To
#=============
#Dataframe
trips_to <- trips %>%
group_by(to_station_id,to_station_name,
to_long,to_lat) %>%
summarize(trips = n_distinct(trip_id))
#Map
pal <- colorNumeric("viridis",domain = trips_to$trips)
tooltip <- paste("<strong>Station:</strong>",
trips_to$to_station_name,"<br>",
"<strong>Trips Terminating:</strong>",
comma(trips_to$trips))
map_to <- leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addCircles(data = trips_to,lng = ~to_long,lat = ~to_lat,
stroke = F,fill = T,fillColor = ~pal(trips),
fillOpacity=0.7,radius = ~(trips/100),
popup = tooltip) %>%
addLegend(position = "bottomright",pal = pal,
values = trips_to$trips,
title = "Trips<br>Terminating")
# Chunk 5
#Map together
sync(map_from,map_to)
# Chunk 6
#=============
#Net
#=============
#Dataframe, 25 largest disparities
trips_net <- trips_to %>%
ungroup() %>%
select(to_station_id,"trips_end" = trips) %>%
left_join(trips_from,.,
by = c("from_station_id" = "to_station_id")) %>%
mutate(trips = trips-trips_end) %>%
select(-trips_end) %>%
arrange(desc(abs(trips))) %>%
head(25)
#Map
pal <- colorNumeric("RdYlGn",domain = trips_net$trips)
tooltip <- paste("<strong>Station:</strong>",
trips_net$from_station_name,"<br>",
"<strong>Trips<br>(Originating -<br>Terminating):</strong>",
comma(trips_net$trips))
map_net <- leaflet() %>%
addProviderTiles("CartoDB.Positron") %>%
addCircles(data = trips_net,lng = ~from_long,lat = ~from_lat,
stroke = T,weight = 1,color = "#0F0F0F",
radius = 100,fill = T,fillColor = ~pal(trips),
fillOpacity = 0.7,popup = tooltip) %>%
addLegend(position = "bottomright",pal = pal,
values = trips_net$trips,
title = "Trips<br>(Originating -<br>Terminating)")
# Chunk 7
#Map
map_net
# Chunk 8
#=============
#Daily
#=============
#Dataframe
daily <- trips %>%
select(start_time,trip_id) %>%
mutate(start_time = date(start_time)) %>%
group_by(start_time) %>%
summarize(trips = n_distinct(trip_id))
#Plot
plot_daily <- ggplot(daily,aes(start_time,trips)) +
geom_line(size = 1,color = "darkgrey",alpha = .7) +
geom_smooth() +
scale_y_comma(limits = c(0, NA)) +
labs(title = "Daily Trips",
x = "Date",y = "Trips",
caption = "Data: Divvy Bikes") +
theme_ipsum(base_size = 12,grid = "XY")
# Chunk 9
plot_daily
# Chunk 10
#=============
#Weekday
#=============
#Dataframe
weekday <- trips %>%
select(start_time,trip_id) %>%
mutate(start_time = wday(date(start_time),label = T)) %>%
group_by(start_time) %>%
summarize(trips = n_distinct(trip_id)) %>%
mutate(trips_perc = trips/sum(trips))
#Plot
plot_weekday <- ggplot(weekday,aes(start_time,trips_perc)) +
geom_bar(stat = "identity",fill = "#75b8d1") +
scale_y_percent(limits = c(0, NA)) +
labs(title = "Trips by Day of Week",
x = "Day of Week",y = "Trips (%)",
caption = "Data: Divvy Bikes") +
theme_ipsum(base_size = 12,grid = "Y")
# Chunk 11
plot_weekday
# Chunk 12
#Dataframe for plotting
trips_time <- trips %>%
mutate(trip_min = round(trip_duration/60,0)) %>%
select(trip_min,trip_id) %>%
group_by(trip_min) %>%
summarize(trips = n_distinct(trip_id))
#Plot
plot_trips_time <- ggplot(trips_time,aes(trip_min,trips)) +
geom_bar(stat = "identity",fill = "#75b8d1") +
geom_vline(xintercept = 31,size = 1,color = "red") +
scale_x_continuous(limits = c(0, 60),
breaks = seq(0,60,10)) +
scale_y_comma(limits = c(0, NA)) +
labs(title = "Trip Duration",
subtitle = "Trips Under 1 Hour (97% of All Trips)",
x = "Trip Duration (Minutes)",y = "Trips",
caption = "Data: Divvy Bikes") +
theme_ipsum(base_size = 12,grid = "Y")
# Chunk 13
#Plot
plot_trips_time
# Chunk 14
#Dataframe for DT
trips_30 <- trips %>%
mutate(trip_30_flag = ifelse(round(trip_duration/60,0)<31,
"Yes","No")) %>%
group_by(user_type,trip_30_flag) %>%
summarize(Trips = n_distinct(trip_id)) %>%
ungroup() %>%
spread(trip_30_flag,Trips,fill = 0) %>%
mutate("No (%)" = percent(No/rowSums(.[-1])),
"Yes (%)" = percent(Yes/rowSums(.[-1]))) %>%
mutate(Total = No+Yes) %>%
select("User Type" = user_type,
Yes,`Yes (%)`,No,`No (%)`,Total)
# Chunk 15
#Table
DT::datatable(trips_30,
caption = "Trips - 30 Minutes or Less",
rownames = F,
options = list(dom = "t",
columnDefs = list(list(
className = "dt-center", targets = "_all"))))
# Chunk 16
#=============
#User Type
#=============
#Dataframe
user_type <- trips %>%
filter(user_type!="Dependent") %>%
select(user_type,trip_id) %>%
group_by(user_type) %>%
summarize(trips = n_distinct(trip_id)) %>%
mutate(trips_perc = trips/sum(trips))
#Plot
plot_user_type <- ggplot(user_type,aes(user_type,trips_perc)) +
geom_bar(stat = "identity",fill = "#75b8d1") +
scale_y_percent(limits = c(0, 1)) +
labs(title = "Trips by User Type",
x = "User Type",y = "Trips (%)",
caption = "Data: Divvy Bikes") +
theme_ipsum(base_size = 12,grid = "Y")
# Chunk 17
plot_user_type
# Chunk 18
#=============
#Age by Gender
#=============
#Dataframe
age_gender <- trips %>%
filter(user_type=="Subscriber",!is.na(gender),
birth_year>=1916) %>%
mutate(age = 2016 - birth_year) %>%
select(age,gender,trip_id) %>%
group_by(age,gender) %>%
summarize(trips = n_distinct(trip_id))
#Plot
plot_age_gender <- ggplot(age_gender,
aes(age,trips,group = gender,
fill = gender)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_comma(limits = c(0, NA)) +
labs(title = "Subscriber Trips by Age and Gender",
x = "Age",y = "Trips",
caption = "Data: Divvy Bikes") +
scale_fill_ipsum(name = "Gender",position = "bottom") +
theme_ipsum(base_size = 12,grid = "Y") +
theme(legend.position = "bottom")
# Chunk 19
plot_age_gender
ggplot(trips_time,aes(trip_min,trips)) +
geom_bar(stat = "identity",fill = "#75b8d1") +
geom_vline(xintercept = 30.5,size = 1,color = "red") +
scale_x_continuous(limits = c(0, 60),
breaks = seq(0,60,10)) +
scale_y_comma(limits = c(0, NA)) +
labs(title = "Trip Duration",
subtitle = "Trips Under 1 Hour (97% of All Trips)",
x = "Trip Duration (Minutes)",y = "Trips",
caption = "Data: Divvy Bikes") +
theme_ipsum(base_size = 12,grid = "Y")
ggplot(age_gender,
aes(age,trips,group = gender,
fill = gender)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_comma(limits = c(0, NA)) +
labs(title = "Subscriber Trips by Age and Gender",
x = "Age",y = "Trips",
caption = "Data: Divvy Bikes") +
scale_fill_ipsum(name = "Gender",position = "bottom") +
facet_wrap(. ~ gender,ncol = 1) +
theme_ipsum(base_size = 12,grid = "Y") +
theme(legend.position = "bottom")
ggplot(age_gender,
aes(age,trips,group = gender,
fill = gender)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_comma(limits = c(0, NA)) +
labs(title = "Subscriber Trips by Age and Gender",
x = "Age",y = "Trips",
caption = "Data: Divvy Bikes") +
scale_fill_ipsum(name = "Gender",position = "bottom") +
facet_wrap(gender ~ .,ncol = 1) +
theme_ipsum(base_size = 12,grid = "Y") +
theme(legend.position = "bottom")
ggplot(age_gender,
aes(age,trips,group = gender,
fill = gender)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(0,100,10)) +
scale_y_comma(limits = c(0, NA)) +
labs(title = "Subscriber Trips by Age and Gender",
x = "Age",y = "Trips",
caption = "Data: Divvy Bikes") +
scale_fill_ipsum(name = "Gender",position = "bottom") +
facet_wrap(~ gender,ncol = 1) +
theme_ipsum(base_size = 12,grid = "Y") +
theme(legend.position = "bottom")
View(age_gender)
age_gender %>% ungroup() %>%  group_by(gender) %>% summarize(trips = sum(trips,na.rm = T))
age_gender %>% ungroup() %>%  group_by(gender) %>% summarize(trips = sum(trips,na.rm = T)) %>% mutate(perc = percent(.$trips/sum(.$trips)))
age_gender %>% ungroup() %>%  group_by(gender) %>% summarize(trips = sum(trips,na.rm = T)) %>% mutate(perc = percent(round(.$trips/sum(.$trips)),3))
age_gender %>% ungroup() %>%  group_by(gender) %>% summarize(trips = sum(trips,na.rm = T)) %>% mutate(perc = percent(round(.$trips/sum(.$trips),3)))
age_gender %>% ungroup() %>%  group_by(gender) %>% summarize(trips = sum(trips,na.rm = T)) %>% mutate(perc = percent(round(.$trips/sum(.$trips),2)))
age_gender %>% ungroup() %>%  group_by(gender) %>% summarize(trips = sum(trips,na.rm = T)) %>% mutate(perc = percent(round(.$trips/sum(.$trips),2))) %>% filter(gender=="Male") %>% pull(3)
age_gender %>% ungroup() %>%  mutate(under35 = ifelse(age<=35,"Yes","No")) %>% group_by(gender,under35) %>% summarize(trips = sum(trips,na.rm = T)) %>% mutate(perc = percent(round(.$trips/sum(.$trips),2)))
r age_gender %>% ungroup() %>%  mutate(under35 = ifelse(age<=35,"Yes","No")) %>% group_by(gender,under35) %>% summarize(trips = sum(trips,na.rm = T))
age_gender %>% ungroup() %>%  mutate(under35 = ifelse(age<=35,"Yes","No")) %>% group_by(gender,under35) %>% summarize(trips = sum(trips,na.rm = T))
age_gender %>% ungroup() %>%  mutate(under35 = ifelse(age<=35,"Yes","No")) %>% group_by(gender,under35) %>% summarize(trips = sum(trips,na.rm = T)) %>% spread(gender,trips)
age_gender %>% ungroup() %>%  mutate(under35 = ifelse(age<=35,"Yes","No")) %>% group_by(gender,under35) %>% summarize(trips = sum(trips,na.rm = T)) %>% spread(gender,trips) %>% mutate(perc_f = percent(round(.$Female/sum(.$Female),2)),perc_m = percent(round(.$Male/sum(.$Male),2)))
View(trips_time)
trips %>% mutate(trip_min = round(trip_duration/60,0)) %>% summarise(avg(trip_min,na.rm=T))
trips %>% mutate(trip_min = round(trip_duration/60,0)) %>% summarise(mean(trip_min,na.rm=T))
trips %>% mutate(trip_min = round(trip_duration/60,0)) %>% summarise(median(trip_min,na.rm=T))
